<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.driver}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${jdbc.maxIdle}</value>
        </property>
        <property name="maxWait">
            <value>${jdbc.maxWait}</value>
        </property>
        <property name="logAbandoned">
            <value>${jdbc.logAbandoned}</value>
        </property>
        <property name="removeAbandoned">
            <value>${jdbc.removeAbandoned}</value>
        </property>
        <property name="removeAbandonedTimeout">
            <value>${jdbc.removeAbandonedTimeout}</value>
        </property>
        <property name="testWhileIdle">
            <value>${jdbc.testWhileIdle}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${jdbc.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.validationQuery}</value>
        </property>
    </bean>

    <!-- Hibernate配置 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
      
         <!-- 配置hibernate的属性 -->  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
            </props>  
        </property>
       <property name="packagesToScan">
            <list>
               	 <!-- 添加解析XML的扫描路径 -->
                <!-- <value>com.geostar.gfstack.operationcenter.simple.model</value> -->
                <value>com.entity</value>
            </list>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- <property name="globalRollbackOnParticipationFailure" value="false"/> -->
    </bean>


	<tx:annotation-driven transaction-manager="transactionManager" />


    <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="use*" propagation="REQUIRED"/>
            <tx:method name="freed*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice> -->

   <!--  <aop:config>
        <aop:advisor
                pointcut="execution(* com.geostar.gfstack.operationcenter.*.service.*Service.*(..))"
                advice-ref="txAdvice"/>
        <aop:advisor
                pointcut="execution(* com.geostar.gfstack.operationcenter.*.*.service.*Service.*(..))"
                advice-ref="txAdvice"/>
        <aop:advisor
                pointcut="execution(* com.geostar.gfstack.operationcenter.*.*.*.service.*Service.*(..))"
                advice-ref="txAdvice"/>
        <aop:advisor
                pointcut="execution(* com.geostar.gfstack.operationcenter.*.*.*.*.service.*Service.*(..))"
                advice-ref="txAdvice"/>
    </aop:config> -->

</beans>